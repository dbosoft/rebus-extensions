trigger:
  branches:
    include:
      - main
      - refs/tags/v*

pool:
  vmImage: windows-latest  

variables:
  buildConfiguration: 'Release'

steps:
- checkout: self
  fetchDepth: 0
  clean: true

- task: UseGitVersion@5
  inputs:
    versionSpec: '5.x'

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
  
- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "XPlat Code Coverage"  --no-build'
    publishTestResults: true

- task: reportgenerator@5
  displayName: 'Merge code coverage results'
  inputs:
    reports: '$(Agent.WorkFolder)/**/coverage.cobertura.xml'
    targetdir: '$(Build.SourcesDirectory)/CoverageResults'
    reporttypes: 'Cobertura'

# Publish the combined code coverage to the pipeline
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/CoverageResults/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CoverageResults'

- task: DotNetCoreCLI@2
  displayName: dotnet pack
  inputs:
    command: pack
    nobuild: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)  --no-build'
    
- task: PublishBuildArtifacts@1
  inputs:
    ArtifactName: build-packages

- task: NuGetCommand@2
  displayName: publish to project nuget repo
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '59a3608a-9bed-4cb4-9467-6efaaa3cbef5/1e425ef4-e3a0-4927-b4c0-2beff753cb88'  